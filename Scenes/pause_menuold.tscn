[gd_scene load_steps=8 format=3 uid="uid://dswd1vlx8yjcc"]

[ext_resource type="Shader" uid="uid://o7fvdpw88bkm" path="res://Shaders/pause_menu.gdshader" id="2_tkn6q"]
[ext_resource type="Shader" uid="uid://nirgfxc3pkqp" path="res://Shaders/pause_menu_Wave.gdshader" id="3_kb35i"]

[sub_resource type="GDScript" id="GDScript_nvdgt"]
script/source = "extends Control

@onready var resumeButton = $PanelContainer/BoxContainer/Resume

func pause():
	Global.is_game_paused = true
	self.show()
	get_tree().paused = true

func resume():
	Global.card_focused = false #para evitar eprdier focus de la carta si pausas menu en item selection
	Global.is_game_paused = false
	self.hide()
	get_tree().paused = false


func testEsc():
	if Input.is_action_just_pressed(\"pause\") and !get_tree().paused:
		resumeButton.grab_focus()
		pause()
	elif Input.is_action_just_pressed(\"pause\") and get_tree().paused:
		resume()
		
func _on_resume_pressed():
	resume()

func _on_exit_pressed():
	get_tree().quit()

func _process(delta):
	testEsc()


func _on_check_box_toggled(toggled_on):
	if toggled_on:
		DisplayServer.window_set_mode(DisplayServer.WINDOW_MODE_FULLSCREEN);
	else:
		DisplayServer.window_set_mode(DisplayServer.WINDOW_MODE_WINDOWED);
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_i0gf7"]
shader = ExtResource("2_tkn6q")
shader_parameter/blur_amount = 2.0
shader_parameter/blur_quality = 8.0
shader_parameter/brightness = 1.0
shader_parameter/saturation = 1.0

[sub_resource type="Gradient" id="Gradient_hdhvl"]
colors = PackedColorArray(0, 0, 0, 1, 0.0383972, 0.0383972, 0.0383972, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_r4ocq"]
gradient = SubResource("Gradient_hdhvl")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lay7g"]
shader = ExtResource("3_kb35i")
shader_parameter/alpha_tresh = 0.8
shader_parameter/shrink = 0.51
shader_parameter/offset_mul = 3.545
shader_parameter/coff_angle = 0.69
shader_parameter/coff_mul = 22.71
shader_parameter/coff_std = 0.0
shader_parameter/amp1 = 0.125
shader_parameter/freq1 = 4.0
shader_parameter/speed1 = 3.69
shader_parameter/amp2 = 0.09
shader_parameter/freq2 = 9.0
shader_parameter/speed2 = 0.395
shader_parameter/corner_radius = 0.1
shader_parameter/cols = SubResource("GradientTexture1D_r4ocq")

[node name="PauseMenu" type="Control"]
process_mode = 3
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_nvdgt")

[node name="ColorRect" type="ColorRect" parent="."]
z_as_relative = false
material = SubResource("ShaderMaterial_i0gf7")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelContainer" type="PanelContainer" parent="."]
material = SubResource("ShaderMaterial_lay7g")
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -202.0
offset_top = -243.0
offset_right = 163.0
offset_bottom = 191.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1.04681, 1.0265)

[node name="BoxContainer" type="VBoxContainer" parent="PanelContainer"]
layout_mode = 2
alignment = 1

[node name="Resume" type="Button" parent="PanelContainer/BoxContainer"]
process_mode = 3
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
text = "RESUME"

[node name="Options" type="Button" parent="PanelContainer/BoxContainer"]
layout_mode = 2
size_flags_horizontal = 4
text = "Options"

[node name="Exit" type="Button" parent="PanelContainer/BoxContainer"]
process_mode = 3
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 0
text = "Exit
"

[node name="CheckBox" type="CheckBox" parent="PanelContainer/BoxContainer"]
layout_mode = 2
size_flags_horizontal = 4
button_pressed = true
text = "FULLSCREEN
"

[connection signal="pressed" from="PanelContainer/BoxContainer/Resume" to="." method="_on_resume_pressed"]
[connection signal="pressed" from="PanelContainer/BoxContainer/Exit" to="." method="_on_exit_pressed"]
[connection signal="toggled" from="PanelContainer/BoxContainer/CheckBox" to="." method="_on_check_box_toggled"]
